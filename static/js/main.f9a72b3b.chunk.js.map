{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","resetGoods","setState","addGood","newGood","prevGoods","removeGood","deleteGood","arrayOfGoods","includes","splice","lastIndexOf","newGoods","message","this","length","join","lastElem","firstPart","slice","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiGaC,EA3Ff,4MACEC,MAAe,CACbC,aAAc,IAFlB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,QAAU,SAACC,GACT,EAAKF,UAAS,SAACG,GAAD,MAAgB,CAC5BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BI,SAXhD,EAeEE,WAAa,SAACC,GACZ,IAAMC,EAAe,EAAKT,MAAMC,aAE5BQ,EAAaC,SAASF,IACxBC,EAAaE,OAAOF,EAAaG,YAAYJ,GAAa,GAG5D,EAAKL,UAAS,SAACU,GAAD,MAAe,CAC3BZ,aAAa,YAAKY,EAASZ,mBAvBjC,4CA2BE,WAAU,IAAD,OACHa,EAAU,GAUd,GARuC,IAAnCC,KAAKf,MAAMC,aAAae,SAC1BF,EAAU,qBAG2B,IAAnCC,KAAKf,MAAMC,aAAae,SAC1BF,EAAO,UAAMC,KAAKf,MAAMC,aAAagB,KAAK,MAAnC,iBAGLF,KAAKf,MAAMC,aAAae,OAAS,EAAG,CACtC,IAAME,EAAWH,KAAKf,MAAMC,aAAac,KAAKf,MAAMC,aAAae,OAAS,GACpEG,EAAYJ,KAAKf,MAAMC,aAAamB,MAAM,GAAI,GAAGH,KAAK,MAE5DH,EAAO,UAAMK,EAAN,gBAAuBD,EAAvB,iBAGT,OACE,sBAAKG,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACGP,IAEH,wBACEQ,KAAK,SACLD,UAAU,SACVE,QAASR,KAAKb,WAHhB,eAQA,yBAASmB,UAAU,QAAnB,SACGvB,EAAgB0B,KAAI,SAAAC,GAAI,OACvB,sBAAKJ,UAAW,EAAKrB,MAAMC,aAAaS,SAASe,GAAQ,eAAiB,OAA1E,UACE,oBAAIJ,UAAU,cAAd,SACGI,IAGH,wBACEH,KAAK,SACLD,UAAU,qBACVE,QAAS,WACP,EAAKnB,QAAQqB,IAJjB,iBASA,wBACEH,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKhB,WAAWkB,IAJpB,mCA1Ed,GAAyBC,IAAMC,WCf/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9a72b3b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: [],\n  };\n\n  resetGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  addGood = (newGood:string) => {\n    this.setState((prevGoods) => ({\n      selectedGood: [...prevGoods.selectedGood, newGood],\n    }));\n  };\n\n  removeGood = (deleteGood:string) => {\n    const arrayOfGoods = this.state.selectedGood;\n\n    if (arrayOfGoods.includes(deleteGood)) {\n      arrayOfGoods.splice(arrayOfGoods.lastIndexOf(deleteGood), 1);\n    }\n\n    this.setState((newGoods) => ({\n      selectedGood: [...newGoods.selectedGood],\n    }));\n  };\n\n  render() {\n    let message = '';\n\n    if (this.state.selectedGood.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (this.state.selectedGood.length === 1) {\n      message = `${this.state.selectedGood.join(', ')} is selected`;\n    }\n\n    if (this.state.selectedGood.length > 1) {\n      const lastElem = this.state.selectedGood[this.state.selectedGood.length - 1];\n      const firstPart = this.state.selectedGood.slice(0, -1).join(', ');\n\n      message = `${firstPart} and ${lastElem} are selected`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {message}\n        </h1>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.resetGoods}\n        >\n          X\n        </button>\n\n        <section className=\"cards\">\n          {goodsFromServer.map(good => (\n            <div className={this.state.selectedGood.includes(good) ? 'card__active' : 'card'}>\n              <h2 className=\"card__title\">\n                {good}\n              </h2>\n\n              <button\n                type=\"button\"\n                className=\"button button__add\"\n                onClick={() => {\n                  this.addGood(good);\n                }}\n              >\n                Add\n              </button>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  this.removeGood(good);\n                }}\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// eslint-disable-next-line import/no-named-as-default\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}