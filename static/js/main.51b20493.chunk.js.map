{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","resetGoods","setState","addGood","newGood","prevGoods","removeGood","deleteGood","newGoods","filter","good","createMessage","message","length","join","lastElem","firstPart","slice","this","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkGaC,EA3Ff,4MACEC,MAAe,CACbC,aAAc,IAFlB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,QAAU,SAACC,GACT,EAAKF,UAAS,SAACG,GAAD,MAAgB,CAC5BL,aAAa,GAAD,mBAAMK,EAAUL,cAAhB,CAA8BI,SAXhD,EAeEE,WAAa,SAACC,GACZ,EAAKL,UAAS,SAACM,GAAD,MAAe,CAC3BR,aAAcQ,EAASR,aAAaS,QAAO,SAAAC,GAAI,OAAIA,IAASH,UAjBlE,EAqBEI,cAAgB,SAACX,GACf,IAAIY,EAAU,GAUd,GAR4B,IAAxBZ,EAAaa,SACfD,EAAU,qBAGgB,IAAxBZ,EAAaa,SACfD,EAAO,UAAMZ,EAAac,KAAK,MAAxB,iBAGLd,EAAaa,OAAS,EAAG,CAC3B,IAAME,EAAWf,EAAaA,EAAaa,OAAS,GAC9CG,EAAYhB,EAAaiB,MAAM,GAAI,GAAGH,KAAK,MAEjDF,EAAO,UAAMI,EAAN,gBAAuBD,EAAvB,iBAGT,OAAOH,GAvCX,4CA0CE,WAAU,IAAD,OACCZ,EAAiBkB,KAAKnB,MAAtBC,aAER,OACE,sBAAKmB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,SACGD,KAAKP,cAAcX,KAEtB,wBACEoB,KAAK,SACLD,UAAU,SACVE,QAASH,KAAKjB,WAHhB,eAQA,yBAASkB,UAAU,QAAnB,SACGtB,EAAgByB,KAAI,SAAAZ,GAAI,OACvB,sBAAKS,UAAWnB,EAAauB,SAASb,GAAQ,iBAAmB,OAAjE,UACE,6BACGA,IAGH,wBACEU,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKlB,QAAQO,IAJjB,iBASA,wBACEU,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKf,WAAWI,IAJpB,mCA1Ed,GAAyBc,IAAMC,WChB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.51b20493.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: [],\n  };\n\n  resetGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  addGood = (newGood:string) => {\n    this.setState((prevGoods) => ({\n      selectedGood: [...prevGoods.selectedGood, newGood],\n    }));\n  };\n\n  removeGood = (deleteGood:string) => {\n    this.setState((newGoods) => ({\n      selectedGood: newGoods.selectedGood.filter(good => good !== deleteGood),\n    }));\n  };\n\n  createMessage = (selectedGood: string[]) => {\n    let message = '';\n\n    if (selectedGood.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (selectedGood.length === 1) {\n      message = `${selectedGood.join(', ')} is selected`;\n    }\n\n    if (selectedGood.length > 1) {\n      const lastElem = selectedGood[selectedGood.length - 1];\n      const firstPart = selectedGood.slice(0, -1).join(', ');\n\n      message = `${firstPart} and ${lastElem} are selected`;\n    }\n\n    return message;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {this.createMessage(selectedGood)}\n        </h1>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.resetGoods}\n        >\n          X\n        </button>\n\n        <section className=\"cards\">\n          {goodsFromServer.map(good => (\n            <div className={selectedGood.includes(good) ? 'card__selected' : 'card'}>\n              <h2>\n                {good}\n              </h2>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  this.addGood(good);\n                }}\n              >\n                Add\n              </button>\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => {\n                  this.removeGood(good);\n                }}\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// eslint-disable-next-line import/no-named-as-default\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}